topic_id,id,name,content,url_link
1,1,Functional & Non-functional Requirements,Functional requirements describe what the software has to do. A developer needs to test his product before launching it into the market. Functional requirements describe what the software has to do.,https://www.youtube.com/watch?v=dQw4w9WgXcQ
1,2,Requirement Elicitation,"Quantitative Approaches in NFRs are used to find measurable scales for the quality attributes like efficiency, flexibility, integrity, usability etc. The four dimensions of Dependability: Availability, Reliability, Security, Safety",https://www.youtube.com/watch?v=dQw4w9WgXcQ
1,3,Requirement Analysis,"Stakeholders are the one who will invest in and use the product, so its essential to chalk out stakeholders first. According to QFD, Normal, Expected and Exciting requirements maximizes customer satisfaction from the Software Engineering Process. Use Case captures who does what with the system, for what purpose, without dealing with system internals.",https://www.youtube.com/watch?v=dQw4w9WgXcQ
2,1,Basic UML,"The different notations of UML includes the nine UML diagrams namely class, object, sequence, collaboration, activity, state-chart, component, deployment and use case diagrams. Behavioral models are used to describe the dynamic behavior of an executing system. This can be modeled from the perspective of the data processed by the system or by the events that stimulate responses from a system. Structural models show the organization and architecture of a system. These are used to define the static structure of classes in a system and their associations.",
2,2,Intermediate UML,Structural perspective is used to define the static structure of classes in a system and their associations. State diagrams show system states and events that cause transitions from one state to another. DFDs focus on system functions and do not recognize system objects.,
2,3,Advanced UML,"Generalization is an everyday technique that we use to manage complexity.This means that common information will be maintained in one place only. Level 1 ERD models all data objects (entities) and their “connections” to one another while Level 3 ERD models all entities, relationships, and the attributes that provide further depth. Use case modeling is mostly used to model interactions between a system and external actors.Sequence diagrams are used to model interactions between system components, although external agents may also be included.",
3,1,Basic Software Testing,Cyclomatic complexity is white box testing Evaluating deliverable to find errors Lower and upper limits are present Run chart,
3,2,Intermediate Software Testing,Maintenance testing is performed using Breadth test and depth test White Box techniques are also classified as Structural testing Alpha testing is done at Developer’s end,
3,3,Advanced Software Testing,"White box technique includes Statement Testing, Decision Testing, Condition Coverage Testing Levels includes Unit testing, System testing, Integration testing Boundary value analysis belong to Black Box testing",https://www.youtube.com/watch?v=dQw4w9WgXcQ
4,1,Basic System Modelling,"A Structure Chart (SC) in software engineering and organizational theory, is a chart which shows the breakdown of a system to its lowest manageable levels.",
4,2,Intermediate System Modelling,"Program specification is the definition of what a computer program is expected to do. The developer has to find in the technical documentation enough information to start coding. The role of database administrators includes the development and design of database strategies, system monitoring and improving database performance and capacity, and planning for future expansion requirements.",https://www.youtube.com/watch?v=dQw4w9WgXcQ
4,3,Advanced System Modelling,"Debugging is a methodical process of finding and reducing the number of bugs, or defects, in a computer program or a piece of electronic hardware, thus making it behave as expected. Part of the design phase is to create structural and behavioral models of the system which is covered by architecture, data and the interface of the product.",https://www.youtube.com/watch?v=dQw4w9WgXcQ
5,1,Basic Software Maintenance,"Adaptive, corrective, perfective and preventive are the four types of software maintenance.",
5,2,Intermediate Software Maintenance,"All other options are known as levels of software testing which further have types of software testing. The three categories include: Coverage, Minimization and Safe techniques.",
5,3,Advanced Software Maintenance,"Safe techniques do not focus on coverage criteria, instead they select every test case that cause a modified program to produce different output than its original version. Generality measures the ability of a technique to handle realistic and diverse language constructs, arbitrarily complex modifications, and realistic testing applications. Inclusiveness measures the extent to which a technique chooses test cases that will cause the modified program to produce different output than the original program, and thereby expose faults caused by modifications.",
6,1,Basic Diagrams in UML,"A use case diagrams captures only the functionality of the system whereas a dynamic model/view captures the functions as well as the action. An object diagram focuses on some particular set of object instances and attributes, and the links between the instances. It is a static snapshot of a dynamic view of the system. Interaction diagram are used to formalize the dynamic behavior of the system.",https://www.youtube.com/watch?v=dQw4w9WgXcQ
6,2,Intermediate Diagrams in UML,"A sequence diagrams timeline along which tasks are completed. The nine UML diagrams include use-case, sequence, collaboration, activity, state-chart, deployment, class, object and component.",https://www.youtube.com/watch?v=dQw4w9WgXcQ
6,3,Advanced Diagrams in UML,Functionalities are governed by the system. The context model of a system may be represented using associations. Associations simply show that there are some relationships between the entities involved in the association. Use a scenario-based analysis where various scenarios of system use are identified and analyzed in turn.,https://www.youtube.com/watch?v=dQw4w9WgXcQ